{
  "openapi": "3.0.0",
  "info": {
    "title": "Todo List Service API",
    "version": "1.0.0",
    "description": "API documentation for the Todo List Service"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "User management APIs"
    },
    {
      "name": "Tasks",
      "description": "Task management APIs"
    },
    {
      "name": "Auth",
      "description": "Authentication APIs"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Create a new user (signup)",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string", "example": "Dan" },
                  "last_name": { "type": "string", "example": "Vaitzman" },
                  "email": { "type": "string", "example": "dan@vaitzman.com" },
                  "password": { "type": "string", "example": "1234qwer" }
                },
                "required": ["first_name", "last_name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "User created successfully" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "first_name": { "type": "string" },
                        "last_name": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/auth/signin": {
      "post": {
        "summary": "Sign in to the application (login)",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": { "type": "string", "example": "dan@vaitzman.com" },
                  "password": { "type": "string", "example": "1234qwer" }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in, returns token",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Login successful" },
                    "token": { "type": "string", "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..." }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": { "type": "string" },
                      "first_name": { "type": "string" },
                      "last_name": { "type": "string" },
                      "email": { "type": "string" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": ["Users"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string", "example": "Dan" },
                  "last_name": { "type": "string", "example": "Vaitzman" },
                  "email": { "type": "string", "example": "dan@vaitzman.com" },
                  "password": { "type": "string", "example": "1234qwer" }
                },
                "required": ["first_name", "last_name", "email", "password"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "User created successfully" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string" },
                        "first_name": { "type": "string" },
                        "last_name": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": { "type": "string" },
                    "first_name": { "type": "string" },
                    "last_name": { "type": "string" },
                    "email": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "User ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": { "type": "string", "example": "Dan" },
                  "last_name": { "type": "string", "example": "Vaitzman" },
                  "email": { "type": "string", "example": "dan@vaitzman.com" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "User updated successfully" },
                    "user": {
                      "type": "object",
                      "properties": {
                        "_id": { "type": "string" },
                        "first_name": { "type": "string" },
                        "last_name": { "type": "string" },
                        "email": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "User deleted successfully" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tasks": {
      "get": {
        "summary": "Get all tasks",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "responses": {
          "200": {
            "description": "List of tasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "task_id": { "type": "integer" },
                      "title": { "type": "string" },
                      "description": { "type": "string" },
                      "create_date": { "type": "string", "format": "date-time" },
                      "due_date": { "type": "string", "format": "date-time" },
                      "priority_id": { "type": "integer" },
                      "status_id": { "type": "integer" }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new task",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string", "example": "Some example" },
                  "description": { "type": "string", "example": "yes we did it" },
                  "due_date": { "type": "string", "format": "date-time", "example": "2024-12-31T23:59:59Z" },
                  "assigned_user_id": { "type": "integer", "example": 3 },
                  "priority_id": { "type": "integer", "example": 3 },
                  "status_id": { "type": "integer", "example": 1 }
                },
                "required": ["title", "description", "due_date", "assigned_user_id", "priority_id", "status_id"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Task created successfully" },
                    "task": {
                      "type": "object",
                      "properties": {
                        "task_id": { "type": "integer" },
                        "title": { "type": "string" },
                        "description": { "type": "string" },
                        "due_date": { "type": "string", "format": "date-time" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/tasks/{id}": {
      "get": {
        "summary": "Get a task by ID",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task details",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "task_id": { "type": "integer" },
                    "title": { "type": "string" },
                    "description": { "type": "string" },
                    "create_date": { "type": "string", "format": "date-time" },
                    "due_date": { "type": "string", "format": "date-time" },
                    "priority_id": { "type": "integer" },
                    "status_id": { "type": "integer" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a task by ID",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Task ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string", "example": "Updated Task Title" },
                  "description": { "type": "string", "example": "Updated task description" },
                  "due_date": { "type": "string", "format": "date-time", "example": "2025-01-15T12:00:00Z" },
                  "priority_id": { "type": "integer", "example": 2 },
                  "status_id": { "type": "integer", "example": 3 }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Task updated successfully" },
                    "task": {
                      "type": "object",
                      "properties": {
                        "task_id": { "type": "integer" },
                        "title": { "type": "string" },
                        "description": { "type": "string" }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a task by ID",
        "tags": ["Tasks"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": { "type": "string" },
            "description": "Task ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string", "example": "Task deleted successfully" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Task not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  }
}
